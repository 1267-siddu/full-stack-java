Interview Questions
===================
Q) Types of Data structures in Java?

We have two types of data structures in java.

Diagram: class44.1



Q) How to display the objects from List?

import java.util.*;
class Test  
{
	public static void main(String[] args) 
	{
		List<Integer> list=Arrays.asList(3,7,1,2,9,5);

		list.forEach(element -> System.out.println(element+" "));
	}
}


Q) How to display the objects from Map?

import java.util.*;
class Test  
{
	public static void main(String[] args) 
	{
		Map<Integer,String> map=new LinkedHashMap<Integer,String>();
		map.put(1,"java");
		map.put(2,"dotnet");
		map.put(3,"python");

		map.forEach((key,value)-> System.out.println(key+" "+value));
	}
}



Q) Write a java program to store Employee object in Collection?

import java.util.*;

class Employee
{
	private int empId;
	private String empName;
	private double empSal;

	//parameterized constructor
	Employee(int empId,String empName,double empSal)
	{
		this.empId=empId;
		this.empName=empName;
		this.empSal=empSal;
	}

	//getter methods
	public int getEmpId()
	{
		return empId;
	}
	public String getEmpName()
	{
		return empName;
	}
	public double getEmpSal()
	{
		return empSal;
	}
}


class Test  
{
	public static void main(String[] args) 
	{
		ArrayList<Employee> al=new ArrayList<Employee>();
		al.add(new Employee(101,"Alan",1000d));
		al.add(new Employee(102,"Kelvin",2000d));
		al.add(new Employee(103,"Jose",3000d));


		al.forEach(element -> System.out.println(element.getEmpId()+" "+element.getEmpName()+" "+element.getEmpSal()));

	}
}




Q) Give me any example on Abstraction?

abstract class Vehicle
{
	public abstract void run();
}
class Bike extends Vehicle
{
	public void run()
	{
		System.out.println("Bike runs with 180 speed");
	}
}
class Test
{
	public static void main(String[] args)
	{
		Bike b=new Bike();
		b.run();
	}
}


ex:
---
import java.util.*;
class Test
{
	public static void main(String[] args)
	{
		Scanner sc=new Scanner(System.in);

		System.out.println("Enter the No :");
		int no=sc.nextInt();

		// consumes the dangling newline character
		sc.nextLine();

		System.out.println("Enter the Name :");
		String name=sc.nextLine();

		System.out.println("Enter the Salary :");
		double sal=sc.nextDouble();

		System.out.println(no+" "+name+" "+sal);
	}
}























